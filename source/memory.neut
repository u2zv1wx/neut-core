(include "./foundation.neut")

(include "./identity.neut")

(section memory)

(define allocate ((size i64))
  (witness unsafe.pointer
    (derangement (external malloc) size)))

(define deallocate ((A tau) (x A))
  (witness top
    (derangement (external free) x)))

(define add-pointer ((p unsafe.pointer) (offset i64))
  (unsafe.cast i64 unsafe.pointer (add-i64 (unsafe.cast unsafe.pointer i64 p) offset)))

(define store-i8 ((value i8) (ptr unsafe.pointer))
  (witness top
    (derangement (store i8) ptr value)))
(define store-i16 ((value i16) (ptr unsafe.pointer))
  (witness top
    (derangement (store i16) ptr value)))
(define store-i32 ((value i32) (ptr unsafe.pointer))
  (witness top
    (derangement (store i32) ptr value)))
(define store-i64 ((value i64) (ptr unsafe.pointer))
  (witness top
    (derangement (store i64) ptr value)))
(define store-f16 ((value f16) (ptr unsafe.pointer))
  (witness top
    (derangement (store f16) ptr value)))
(define store-f32 ((value f32) (ptr unsafe.pointer))
  (witness top
    (derangement (store f32) ptr value)))
(define store-f64 ((value f64) (ptr unsafe.pointer))
  (witness top
    (derangement (store f64) ptr value)))
(define store-pointer ((value unsafe.pointer) (ptr unsafe.pointer))
  (witness top
    (derangement (store (pointer i8)) ptr value)))

(define store-i8-with-index ((value i8) (ptr unsafe.pointer) (index i64))
  (store-i8 value (add-pointer ptr (mul-i64 1 index))))
(define store-i16-with-index ((value i16) (ptr unsafe.pointer) (index i64))
  (store-i16 value (add-pointer ptr (mul-i64 2 index))))
(define store-i32-with-index ((value i32) (ptr unsafe.pointer) (index i64))
  (store-i32 value (add-pointer ptr (mul-i64 4 index))))
(define store-i64-with-index ((value i64) (ptr unsafe.pointer) (index i64))
  (store-i64 value (add-pointer ptr (mul-i64 8 index))))
(define store-f16-with-index ((value f16) (ptr unsafe.pointer) (index i64))
  (store-f16 value (add-pointer ptr (mul-i64 2 index))))
(define store-f32-with-index ((value f32) (ptr unsafe.pointer) (index i64))
  (store-f32 value (add-pointer ptr (mul-i64 4 index))))
(define store-f64-with-index ((value f64) (ptr unsafe.pointer) (index i64))
  (store-f64 value (add-pointer ptr (mul-i64 8 index))))
(define store-pointer-with-index ((value unsafe.pointer) (ptr unsafe.pointer) (index i64))
  (store-pointer value (add-pointer ptr (mul-i64 8 index))))

(define load-i8 ((ptr unsafe.pointer))
  (witness i8
    (derangement (load i8) ptr)))
(define load-i16 ((ptr unsafe.pointer))
  (witness i16
    (derangement (load i16) ptr)))
(define load-i32 ((ptr unsafe.pointer))
  (witness i32
    (derangement (load i32) ptr)))
(define load-i64 ((ptr unsafe.pointer))
  (witness i64
    (derangement (load i64) ptr)))
(define load-f16 ((ptr unsafe.pointer))
  (witness f16
    (derangement (load f16) ptr)))
(define load-f32 ((ptr unsafe.pointer))
  (witness f32
    (derangement (load f32) ptr)))
(define load-f64 ((ptr unsafe.pointer))
  (witness f64
    (derangement (load f64) ptr)))
(define load-pointer ((ptr unsafe.pointer))
  (witness unsafe.pointer
    (derangement (load (pointer i8)) ptr)))

(define load-i8-with-index ((ptr unsafe.pointer) (index i64))
  (load-i8 (add-pointer ptr (mul-i64 1 index))))
(define load-i16-with-index ((ptr unsafe.pointer) (index i64))
  (load-i16 (add-pointer ptr (mul-i64 2 index))))
(define load-i32-with-index ((ptr unsafe.pointer) (index i64))
  (load-i32 (add-pointer ptr (mul-i64 4 index))))
(define load-i64-with-index ((ptr unsafe.pointer) (index i64))
  (load-i64 (add-pointer ptr (mul-i64 8 index))))
(define load-f16-with-index ((ptr unsafe.pointer) (index i64))
  (load-f16 (add-pointer ptr (mul-i64 2 index))))
(define load-f32-with-index ((ptr unsafe.pointer) (index i64))
  (load-f32 (add-pointer ptr (mul-i64 4 index))))
(define load-f64-with-index ((ptr unsafe.pointer) (index i64))
  (load-f64 (add-pointer ptr (mul-i64 8 index))))
(define load-pointer-with-index ((ptr unsafe.pointer) (index i64))
  (load-pointer (add-pointer ptr (mul-i64 8 index))))

(end memory)
